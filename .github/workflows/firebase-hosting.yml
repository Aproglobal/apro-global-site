# .github/workflows/firebase-hosting.yml
name: Deploy to Firebase Hosting & Functions
run-name: "Build & Deploy ‚Ä¢ ${{ github.ref_name }} ‚Ä¢ by ${{ github.actor }}"

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-live
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # --- Build-time env for Vite (ÌîÑÎ°†Ìä∏ Í≥µÍ∞ú Î≥ÄÏàò) ---
      - name: Create .env for build
        run: |
          cat << 'EOF' > .env
          VITE_SALES_EMAIL=${{ secrets.VITE_SALES_EMAIL }}
          VITE_GA_MEASUREMENT_ID=${{ secrets.VITE_GA_MEASUREMENT_ID }}
          VITE_AB_DEFAULT=A
          VITE_RECAPTCHA_SITE_KEY=${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
          EOF
          echo ".env file created (values hidden):"
          cat .env | sed 's/=\(.*\)/=[HIDDEN]/'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      - name: Verify GA ID replaced
        run: |
          if [ ! -f dist/index.html ]; then
            echo "‚ùå dist/index.html not found. Is Vite output 'dist'?" && exit 1
          fi
          if grep -q "googletagmanager.com/gtag/js?id=G-" dist/index.html; then
            echo "‚úÖ GA ID found in dist/index.html"
          else
            echo "‚ùå GA ID NOT found in dist/index.html"; exit 1
          fi

      # ---- Functions(+ Firestore Indexes): Î™®Îì† Î∏åÎûúÏπòÏóêÏÑú Ïã§Ìñâ ----
      - name: Sync & Deploy Firestore Indexes + Functions
        shell: bash
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SALES_TO: ${{ secrets.SALES_TO }}
          SENDGRID_FROM: ${{ secrets.SENDGRID_FROM }}
          SALES_BCC: ${{ secrets.SALES_BCC }}
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
        run: |
          set -euo pipefail

          # 0) ÌïÑÏàò ÏãúÌÅ¨Î¶ø ÏóÜÏúºÎ©¥ Functions Î∞∞Ìè¨ Ïä§ÌÇµ (ÏïàÏ†Ñ)
          missing=()
          [ -z "${SENDGRID_API_KEY:-}" ]  && missing+=("SENDGRID_API_KEY")
          [ -z "${SALES_TO:-}" ]         && missing+=("SALES_TO")
          [ -z "${SENDGRID_FROM:-}" ]    && missing+=("SENDGRID_FROM")
          [ -z "${RECAPTCHA_SECRET:-}" ] && missing+=("RECAPTCHA_SECRET")
          if [ ${#missing[@]} -gt 0 ]; then
            echo "üü° Skipping functions deploy. Missing secrets: ${missing[*]}"
            exit 0
          fi

          # 1) ÏÑúÎπÑÏä§ Í≥ÑÏ†ï Ïù∏Ï¶ù(ADC)
          export GOOGLE_APPLICATION_CREDENTIALS="$RUNNER_TEMP/gcp.json"
          printf '%s' "$FIREBASE_SERVICE_ACCOUNT" > "$GOOGLE_APPLICATION_CREDENTIALS"

          # 2) Firebase CLI
          npm i -g firebase-tools@latest

          # 3) GitHub Secrets ‚Üí Firebase Secret Manager ÎèôÍ∏∞Ìôî
          sync_secret () {
            local NAME="$1"
            local VAL="$(printenv "$NAME" || true)"
            if [ -z "$VAL" ]; then
              VAL="__NONE__"
              echo "[$NAME] not provided ‚Äî using placeholder '__NONE__'"
            fi
            printf "%s" "$VAL" | firebase functions:secrets:set "$NAME" \
              --project "$FIREBASE_PROJECT_ID" --force --non-interactive
            echo "Synced secret: $NAME"
          }
          sync_secret SENDGRID_API_KEY
          sync_secret SALES_TO
          sync_secret SENDGRID_FROM
          sync_secret SALES_BCC
          sync_secret RECAPTCHA_SECRET

          # 4) Functions ÎπåÎìú
          pushd functions
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run build
          popd

          # 5) ‚òÖ Ïù∏Îç±Ïä§ + Functions ÎèôÏãú Î∞∞Ìè¨ (ÌïµÏã¨)
          firebase deploy \
            --only "firestore:indexes,functions" \
            --project "$FIREBASE_PROJECT_ID" \
            --non-interactive --force

      # ---- Hosting: Ìï≠ÏÉÅ liveÎ°ú Î∞∞Ìè¨ ----
      - name: Deploy to Firebase Hosting (LIVE)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live
